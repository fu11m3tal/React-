{"ast":null,"code":"var _jsxFileName = \"/Users/syoh/Desktop/React-/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Counter from './Component';\nimport List from './List';\nimport Task from './Task';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [theme, setTheme] = useState(true);\n  const [todos, setTodos] = useState([\"default\"]);\n\n  function changeTheme() {\n    setTheme(() => \"green\");\n  }\n\n  function addToDo() {\n    var todo = document.getElementById(\"todo\").value;\n\n    if (todo !== \"\") {\n      console.log(\"tasked\");\n      setTodos(currTodos => [...currTodos, todo]);\n    }\n\n    document.getElementById(\"todo\").value = \"\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"P\", theme]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"todo\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addToDo,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 27\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeTheme,\n      children: \"theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JdwBx1q+Mhsjgs33d2nbYNr+qBs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/syoh/Desktop/React-/src/App.js"],"names":["Counter","List","Task","useState","App","theme","setTheme","todos","setTodos","changeTheme","addToDo","todo","document","getElementById","value","console","log","currTodos","map"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,aAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,QAAT,QAA0B,OAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAC,SAAD,CAAD,CAAlC;;AAGA,WAASM,WAAT,GAAuB;AACrBH,IAAAA,QAAQ,CAAC,MAAM,OAAP,CAAR;AACD;;AACD,WAASI,OAAT,GAAmB;AACjB,QAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAA3C;;AAEA,QAAGH,IAAI,KAAK,EAAZ,EAAgB;AACdI,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAR,MAAAA,QAAQ,CAAES,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeN,IAAf,CAAhB,CAAR;AACD;;AACDC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAhC,GAAwC,EAAxC;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,sBAAMT,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,EAAE,EAAC,MAAV;AAAiB,MAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAGK,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIGH,KAAK,CAACW,GAAN,CAAUP,IAAI,iBAAK;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YAAnB,CAJH,eAKE;AAAQ,MAAA,OAAO,EAAEF,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA1BQL,G;;KAAAA,G;AA4BT,eAAeA,GAAf","sourcesContent":["import Counter from './Component'\nimport List from './List'\nimport Task from './Task'\nimport { useState }  from 'react';\n\nfunction App() {\n  const [theme, setTheme] = useState(true)\n  const [todos, setTodos] = useState([\"default\"])\n  \n  \n  function changeTheme() {\n    setTheme(() => \"green\")\n  }\n  function addToDo() {\n    var todo = document.getElementById(\"todo\").value\n  \n    if(todo !== \"\") {\n      console.log(\"tasked\")\n      setTodos((currTodos) => [...currTodos, todo])\n    }\n    document.getElementById(\"todo\").value = \"\"\n  }\n  return (\n    <div className=\"App\">\n      <h1>P{theme}</h1>\n      <input id=\"todo\" type=\"text\"/>\n      <button onClick= {addToDo}>Add Task</button>\n      {todos.map(todo => (<h1>{todo}</h1>))}\n      <button onClick={changeTheme}>theme</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}